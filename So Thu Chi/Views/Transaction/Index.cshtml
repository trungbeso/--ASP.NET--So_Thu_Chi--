@model IEnumerable<So_Thu_Chi.Models.Transaction>

@{
    ViewData["PageTitle"] = "Transaction";
    ViewData["PageActionText"] = "+";
    ViewData["PageActionUrl"] = "/Transaction/AddOrEdit";
}


<div class="row">
    <div class="col-md-7">
        <ejs-grid id="transactions" dataSource="@Model" gridLines="None" 
                  allowSorting="true" allowPaging="true" created="onGridCreated">
            <e-grid-pageSettings pageSize="7"></e-grid-pageSettings>
            <e-grid-columns>
                <e-grid-column headerText="Category" field="CategoryWithIcon"></e-grid-column>
                <e-grid-column headerText="Date" field="Date" type="date" textAlign="Left" format="MMM-dd-yy" width="110px"></e-grid-column>
                <e-grid-column headerText="Amount" field="FormattedAmount" textAlign="Right" width="150px"></e-grid-column>
                <e-grid-column headerText="Actions" template="#actionColumnTemplate" textAlign="Center" width="100px"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>
    <div class="col-md-5">
        <div class="widget h-100 d-flex justify-content-center align-items-center"
             style="background-color: #212b36">
            <i class="fa-solid fa-money-bill-transfer fa-2xl"></i>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa bản ghi này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Xóa</button>
            </div>
        </div>
    </div>
</div>

<script id="typeColumnTemplate" type="text/x-template">
    ${if(Type=="Income")}
   <span class="badge bg-success">${Type}</span>
    ${else}
    <span class="badge bg-danger">${Type}</span>
    ${/if}
</script>

<script id="actionColumnTemplate" type="text/x-template">
    <div class="d-flex flex-row justify-content-start">
        <a class="btn btm-sm no-a-decoration" href="/Transaction/AddOrEdit/${TransactionId}">
            <i class="fa-solid fa-pencil gap-md-2 text-primary"></i>
        </a>
        <form action="/Transaction/Delete/${TransactionId}" method="post" class="delete-form">
            @Html.AntiForgeryToken()
            <button type="submit" class="p-2 btn btn-sm btn-link no-a-decoration delete-button">
                <i class="fa-solid fa-trash-can gap-md-2 text-danger"></i>
            </button>
        </form>
    </div>
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        let formToSubmit = null;
        const confirmDeleteButton = document.getElementById('confirmDeleteButton');
        const deleteConfirmModalElement = document.getElementById('deleteConfirmModal');
        const deleteConfirmModal = new bootstrap.Modal(deleteConfirmModalElement);

        function onGridCreated(args) {
            const grid = this;

            attachDeleteButtonListeners(grid);

            grid.dataBound = function() {
                const currentGrid = this;
                removeDeleteButtonListeners(currentGrid);
                attachDeleteButtonListeners(currentGrid);
            };
        }
        function attachDeleteButtonListeners(gridInstance) {
            const deleteButtons = gridInstance.element.querySelectorAll('.e-grid tbody .delete-button');

            deleteButtons.forEach(button => {
                button.addEventListener('click', handleDeleteButtonClick);
            });
        }
         function removeDeleteButtonListeners(gridInstance) {
            const deleteButtons = gridInstance.element.querySelectorAll('.e-grid tbody .delete-button');
             deleteButtons.forEach(button => {
                button.removeEventListener('click', handleDeleteButtonClick);
            });
        }
         function handleDeleteButtonClick(event) {
             event.preventDefault();
             formToSubmit = event.target.closest('form.delete-form'); 
             deleteConfirmModal.show();
         }
        confirmDeleteButton.addEventListener('click', function() {
            if (formToSubmit) {
                formToSubmit.submit();
            }
        });
        deleteConfirmModalElement.addEventListener('hidden.bs.modal', function () {
             formToSubmit = null;
        });
    </script>

    <ejs-scripts></ejs-scripts>
}